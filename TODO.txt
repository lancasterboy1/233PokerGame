GameHandler

clientSendData(Client user, String cmd)
IF THEYRE JOINING A GAME->
  IF THERE IS A GAME THAT ISNT FULL->
    CALL THE GAME'S ADD METHOD ON THEM
  ELSE->
    MAKE A NEW GAME, PASS THEM AS ARGUMENT, ADD THE GAME TO THE GAME LIST
ELIF THEYRE STARTING THE GAME
  IF THEYRE IN A GAME->
    THEIR GAME.startGame()
ELIF THEYRE LEAVING THE GAME
  IF THEYRE IN A GAME->
    CALL THE GAME'S REMOVE METHOD ON THEM
ELIF player.waitingForInput->
  CALL THEIR GAME.userSentData(cmd)


Game

public Game(Client creator)
INITIALIZE THE LIST OF PLAYERS (VECTOR)
INITIALIZE THE DECK (VECTOR)
INITIALIZE PLAYERRESPONSES (VECTOR)
ADD CREATOR TO THE LIST OF PLAYERS
SET THE CREATORS CURRENT GAME TO THIS
SET THE GAME STATE TO WAITING

public addPlayer(Client user)
IF GAMEWAITING IS TRUE->
  ADD THEM TO THE LIST OF PLAYERS
  SET THEIR CURRENT GAME TO THIS
  IF THE PLAYER LIST HAS AS MANY PLAYERS AS MAX PLAYERS->
    CALL startGame()

public startGame()
SET EVERY PLAYER'S CHIPS TO 1000
SET GAMEWAITING TO FALSE
startRound()

public removePlayer(Client user)
NO IDEA GOOD LUCK, ACCOUNT FOR EVERY SINGLE GAME STATE PLEASE INCLUDING WAITING FOR PLAYER INPUT
CLEAR THE PLAYER'S HAND ALSO

public startRound()
SET THE GAME PHASE TO 0
SET ACTIVEPLAYERS TO A COPY OF PLAYERS
CLEAR THE DECK
ADD 52 CARD OBJECTS TO THE DECK
CLEAR THE PLAYER'S HAND (FOR SAFETY)
GIVE 5 CARDS FROM THE DECK TO EACH PLAYER'S HAND
CHECK PHASE_ARRAY[GAME PHASE]
IF DISCARD->
  CALL discardPhase()
IF BET->
  CALL betPhase()

private nextPhase()
ADD 1 TO THE GAME PHASE
CLEAR PLAYERRESPONSES
CHECK PHASE_ARRAY[GAME PHASE]
IF DISCARD->
  CALL discardPhase()
IF BET->
  CALL betPhase()
IF FINISH->
  CALL endRound()

private discardPhase()
TELL ALL PLAYERS THEY CAN DISCARD ANY AMOUNT OF CARDS
TELL ALL PLAYERS TO RESPOND, SET THEIR WAITINGFORINPUT TO TRUE

private betPhase()
SET NUMCALLS EQUAL TO 0
SET CURRENTTURN TO 0
SET CURRENTBET TO 0
SET ALLIN TO FALSE
ASK THE PLAYER AT ACTIVEPLAYERS[CURRENTTURN] TO CALL (MATCH THE BET), FOLD (DROP OUT OF THE ROUND), RAISE (INCREASE THE BET), OR ALL IN (SET ALL IN TO TRUE AND FORCE OTHER PLAYERS TO FOLD OR ALL IN)
SET THEIR WAITINGFORINPUT TO TRUE

private winningHand()
FIGURE OUT, USING THE -ACTIVE- PLAYERS LIST, WHOS HAND WON
SEND EVERY PLAYER A MESSAGE DETAILING WHO WON THE ROUND AND WHY
RETURN THE CLIENT REFERENCE OF THE WINNER

private endRound()
CALL winningHand(), ADD THE POT TO THAT CLIENT'S CHIPS
CLEAR EVERY PLAYER'S HAND
IF ALL PLAYERS EXCEPT ONE BANKRUPT->
  endGame(THAT PLAYER)
ELSE->
  ASK EVERYONE IF THEY WANT TO KEEP PLAYING, SET THEIR WAITINGFORINPUT TO TRUE

private endGame(Client player)
TELL EVERYONE THAT PLAYER WON THE GAME
DESTROY THIS

private discardResponse(Client player, String response)
IF THEIR INPUT ISN'T VALID->
  TELL THEM TO FIX IT
ELSE->
  SET THEIR WAITINGFORINPUT TO FALSE
  APPEND THEIR RESPONSE TO PLAYERRESPONSES
  IF THEY DISCARDED->
    DISCARD THEIR CARDS ACCORDINGLY, PUTTING THEM AT THE BOTTOM OF THE DECK
    DEAL THEM AS MANY NEW CARDS AS THEY DISCARDED
  IF EVERYONE RESPONDED->
    SHUFFLE THE REMAINING DECK AGAIN (?)
    nextPhase()

private betResponse(Client player, String response)
IF THEIR INPUT ISN'T VALID->
  TELL THEM TO FIX IT
ELSE->
  SET THEIR WAITINGFORINPUT TO FALSE
  IF THEY FOLDED->
    REMOVE THEM FROM ACTIVEPLAYERS
    NEXT PLAYER'S TURN (BE CAREFUL, THE INDEXES HAVE SHIFTED OVER BY 1 SINCE YOU ALTERED ACTIVEPLAYERS), RESET CURRENTTURN IF NECESSARY
    ASK THEM AND SET THEIR WAITINGFORINPUT TO TRUE
  ELIF THEY CALLED->
    CHECK IF THEY CAN AFFORD IT
    IF NO->
      TELL THEM THIS, SET THEIR WAITINGFORINPUT TO TRUE
    ELIF YES->
      INCREMENT NUMCALLS
      TAKE AN APPROPRIATE AMOUNT FROM THEIR CHIPS AND PUT IT INTO THE POT
      NEXT PLAYER'S TURN, ADD 1 TO CURRENTTURN AND RESET IT IF NECESSARY
      ASK THEM AND SET THEIR WAITINGFORINPUT TO TRUE
  ELIF THEY RAISED->
    CHECK IF THE NUMBER IS 0 OR NEGATIVE
    IF SO->
      TELL THEM THIS, SET THEIR WAITINGFORINPUT TO TRUE
    ELIF THEY CAN'T AFFORD IT->
      TELL THEM, SET THEIR WAITINGFORINPUT TO TRUE
    ELSE->
      ADD THEIR NUMBER TO CURRENTBET
      TAKE MONEY FROM THEIR CHIPS APPROPRIATELY AND ADD IT TO THE POT
      NEXT PLAYER'S TURN, ADD 1 TO CURRENTTURN AND RESET IT IF NECESSARY
      ASK THEM AND SET THEIR WAITINGFORINPUT TO TRUE

private playerContinueResponse(Client player, String response)
APPEND THEIR RESPONSE TO PLAYERRESPONSES
SET THEIR WAITINGFORINPUT TO FALSE
IF ALL PLAYERS RESPONDED ->
  IF ENOUGH PEOPLE SAID YES->
    REMOVE EVERYONE WHO SAID NO
    startRound()
  ELSE->
    IF THERES STILL A PLAYER LEFT->
      endGame(THAT PLAYER)
    ELSE->
      endGame(null)

private tellAllPlayers(String msg)
FOR ALL PLAYERS IN THE PLAYER LIST, SEND THEM MSG

private userSentData(Client user, String cmd)
THIS IS TRIGGERED WHENEVER A USER SENDS A COMMAND AND THEIR WAITINGFORINPUT WAS TRUE.
IF GAMEWAITING->
  ...
ELSE->
  IF PHASE_ARRAY[GAME PHASE] IS DISCARD->
    CALL discardResponse
  ELIF PHASE_ARRAY[GAME PHASE] IS BET->
    CALL betResponse
  ELIF PHASE_ARRAY[GAME PHASE] IS FINISH->
    CALL playerContinueResponse